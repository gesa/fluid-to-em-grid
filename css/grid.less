@charset "utf-8";

/*
 * grid.less
 * Created by Aki Braun on 2012/10/06
 * Class names inspired by the smart-grid created by Daniel Ryan
 * (https://github.com/dryan/css-smart-grid/)
 * v0.1, 2012/10/06
 */

// container sizes (add 1.25em for breakpoint)
@small      : 33.125em;
@medium     : 47.5em;
@standard   : 61.25em;
@large      : 75em;
@hidef      : 100em;

@one-fifth  : 1 / 5;
@two-fifth  : 2 / 5;
@three-fifth: 3 / 5;
@four-fifth : 4 / 5;

@one    : 1 / 12;
@two    : 2 / 12;
@three  : 3 / 12;
@four   : 4 / 12;
@five   : 5 / 12;
@six    : 6 / 12;
@seven  : 7 / 12;
@eight  : 8 / 12;
@nine   : 9 / 12;
@ten    : 10 / 12;
@eleven : 11 / 12;

body {
    font-size: 16px;
}

// Base container class
.container {
    padding: 0 .625em;
    margin: 0 auto;
    clear: both;
}
.row:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}
.mqMiniCols() {
    .container {
        width: auto;
        .columns {
            float: left;
            margin-left: 5%;
            width: 30%;
            &:first-child, &.first {
                margin-left: 0;
            }
            &.two, &.three, &.one-fourth, &.four, &.one-third {
                width: 30%;
            }
            &.five, &.six, &.one-half, &.seven, &.eight, &.two-thirds {
                width: 60%;
            }
            &.nine, &.three-fourths, &.ten, &.eleven, &.twelve {
                width: 100%;
            }
        }
        .offset-one, .offset-two, .offset-three, .offset-one-fourth, .offset-four, .offset-one-third {
            padding-left: 30%;
        }
        .offset-five, .offset-six, .offset-one-half, .offset-seven, .offset-eight, .offset-two-thirds {
            padding-left: 65%;
        }
        .offset-nine, .offset-three-fourths, .offset-ten, .offset-eleven, .offset-twelve {
            padding-left: 100%;
        }
    }
}
.mqCols(@container: @standard) {
    .container {
        width: @container;
        .columns {
            float: left;
            margin-left: (@container * @one / 3);
            width: @container * @one;
            &:first-child, &.first {
                margin-left: 0;
            }
            &.two {
                width: @container * @two;
            }
            &.three, &.one-fourth {
                width: @container * @three;
            }
            &.four, &.one-third {
                width: @container * @four;
            }
            &.five {
                width: @container * @five;
            }
            &.six, &.one-half {
                width: @container * @six;
            }
            &.seven {
                width: @container * @seven;
            }
            &.eight, &.two-thirds {
                width: @container * @eight;
            }
            &.nine, &.three-fourths {
                width: @container * @nine;
            }
            &.ten {
                width: @container * @ten;
            }
            &.eleven {
                width: @container * @eleven;
            }
            &.twelve {
                width: @container;
            }
        }
        .offset-one {
            padding-left: @container * @one;
        }
        .offset-two {
            padding-left: @container * @two + (@container * @one / 3);
        }
        .offset-three, .offset-one-fourth {
            padding-left: @container * @three + (@container * @two / 3);
        }
        .offset-four, .offset-one-third {
            padding-left: @container * @four + (@container * @three / 3);
        }
        .offset-five {
            padding-left: @container * @five + (@container * @four / 3);
        }
        .offset-six, .offset-one-half {
            padding-left: @container * @six + (@container * @five / 3);
        }
        .offset-seven {
            padding-left: @container * @seven + (@container * @six / 3);
        }
        .offset-eight, .offset-two-thirds {
            padding-left: @container * @eight + (@container * @seven / 3);
        }
        .offset-nine, .offset-three-fourths {
            padding-left: @container * @nine + (@container * @eight / 3);
        }
        .offset-ten {
            padding-left: @container * @ten + (@container * @nine / 3);
        }
        .offset-eleven {
            padding-left: @container * @eleven + (@container * @ten / 3);
        }
        .offset-twelve {
            padding-left: @container + (@container * @eleven / 3);
        }
    }
}
@media screen and (min-width: 34.375em) {
    .mqMiniCols();
}
@media screen and (min-width: 48.75em) {
    .mqCols(@medium);
}
@media screen and (min-width: 62.5em) {
    .mqCols(@standard);
}
@media screen and (min-width: 76.25em) {
    .mqCols(@large);
}
@media screen and (min-width: 101.25em) {
    .mqCols(@hidef);
}
html.oldie {
    .mqCols(@standard);
}