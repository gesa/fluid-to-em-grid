@charset "utf-8";

/*
 * grid.less
 * Created by Aki Braun on 2012/10/06
 * Class names inspired by the smart-grid created by Daniel Ryan
 * (https://github.com/dryan/css-smart-grid/)
 * v0.1, 2012/10/06
 */

// container sizes
@small      : 37.5em;
@medium     : 47.5em;
@standard   : 61.25em;
@large      : 75em;
@hidef      : 100em;

@gutter     : 1.25em;
@padding    : @gutter / 2;

@smallColumn    : ((@small - @padding) / 12) - @gutter;
@mediumColumn   : ((@medium - @padding) / 12) - @gutter;
@standardColumn : ((@standard - @padding) / 12) - @gutter;
@largeColumn    : ((@large - @padding) / 12) - @gutter;
@hidefColumn    : ((@hidef - @padding) / 12) - @gutter;

body {
    font-size: 16px;
}

// Base container class
.container {
    padding: 0 .625em;
    margin: 0 auto;
    clear: both;
}
.row:after {
    content: ".";
    display: block;
    height: 0;
    clear: both;
    visibility: hidden;
}
.mqCols(@container: @standard, @column: @standardColumn) {
    .container {
        width: @container;
        .columns {
            float: left;
            margin-left: @gutter;
            width: @column;
            &:first-child, &.first {
                margin-left: 0;
            }
            &.two {
                width: @column * 2 + @gutter;
            }
            &.three, &.one-fourth {
                width: @column * 3 + @gutter * 2;
            }
            &.four, &.one-third {
                width: @column * 4 + @gutter * 3;
            }
            &.five {
                width: @column * 5 + @gutter * 4;
            }
            &.six, &.one-half {
                width: @column * 6 + @gutter * 5;
            }
            &.seven {
                width: @column * 7 + @gutter * 6;
            }
            &.eight, &.two-thirds {
                width: @column * 8 + @gutter * 7;
            }
            &.nine, &.three-fourths {
                width: @column * 9 + @gutter * 8;
            }
            &.ten {
                width: @column * 10 + @gutter * 9;
            }
            &.eleven {
                width: @column * 11 + @gutter * 10;
            }
            &.twelve {
                width: @container;
            }
        }
        .offset-one {
            padding-left: @column + @gutter;
        }
        .offset-two {
            padding-left: @column * 2 + @gutter;
        }
        .offset-three, .offset-one-fourth {
            padding-left: @column * 3 + @gutter * 2;
        }
        .offset-four, .offset-one-third {
            padding-left: @column * 4 + @gutter * 3;
        }
        .offset-five {
            padding-left: @column * 5 + @gutter * 4;
        }
        .offset-six, .offset-one-half {
            padding-left: @column * 6 + @gutter * 5;
        }
        .offset-seven {
            padding-left: @column * 7 + @gutter * 6;
        }
        .offset-eight, .offset-two-thirds {
            padding-left: @column * 8 + @gutter * 7;
        }
        .offset-nine, .offset-three-fourths {
            padding-left: @column * 9 + @gutter * 8;
        }
        .offset-ten {
            padding-left: @column * 10 + @gutter * 9;
        }
        .offset-eleven {
            padding-left: @column * 11 + @gutter * 10;
        }
        .offset-twelve {
            padding-left: @container;
        }
    }
}
@media screen and (min-width: 37.5em) {
    .mqCols(@small, @smallColumn);
}
@media screen and (min-width: 47.5em) {
    .mqCols(@medium, @mediumColumn);
}
@media screen and (min-width: 61.25em) {
    .mqCols(@standard, @standardColumn);
}
@media screen and (min-width: 75em) {
    .mqCols(@large, @largeColumn);
}
@media screen and (min-width: 100em) {
    .mqCols(@hidef, @hidefColumn);
}
html.oldie {
    .mqCols(@standard, @standardColumn);
}